---
# Config example with comments.
# If you know what you are doing and don't want to read too much stuff - take a look at 'config.example_without_commments.yml'.


# Misc config
Misc:
  # Time for all HttpClients for waiting for respond for servers
  # Value must be in milliseconds 
  Timeout: 60000
# Config related to Discord.
Discord:
  # Put your bot's API token here.
  # It should look similar to this "qdfNzE2O2145N672zE52.sdQhq12e54w.q9jylzqwer5Tff32352Wfck341uE".
  Token: "Your Discord API token here"
  # Defines that the bot should attempt to reconnect indefinitely.
  # Set to true only if you are not using something that will restart your bot if it crashes.
  ReconnectIndefinitely: false
  # Sets whether to automatically reconnect in case a connection is lost.
  AutoReconnect: true
  # Sets the size of the global message cache.
  # Bot doesn't utilize any work with cached messages so you probably can set it to 0.
  # But i like to have even a little bit cached messages just in case, since it doesn't take much memory.
  MessageCacheSize: 64
  # Name of your console window, and name that will appear at some logs lines at the bot's level.
  LogName: "PaperMalKing"
  # Which activity type will appear in bot status.
  #	Set to 0 to display "playing" activity.
  #	Set to 2 to display "listening" activity.
  #	Set to 3 to display "watching" activity
  ActivityType: 3
  # Text that will be placed next to activity type in your bot status.
  PresenceText: "for your animelists"
  # Config related to bot's commands.
  Commands:
    # Prefixes with which your message should start with if you want to invoke the command.
    Prefixes:
      - "pmk"
      - "=="
    # Determines if bot's mention at the start of the message should be a prefix too.
    EnableMentionPrefix: true
    # Determines if your command should be case sensitive.
    CaseSensitive: false
    # Determines where should send help message, in DM or in the same channel help command was invoked.
    DmHelp: false
# Config related to MyAnimeList.
MyAnimeList:
  # Config for how fast bot should request to MyAnimeList.
  #######################################################################################################
  # Since there are no public API for MyAnimeList as well as documentation,                             #
  #	default rate-limit will be 1 request / 2 seconds as it was advised to me in Jikan Discord Guild     #
  #	Source: https://discordapp.com/channels/460491088004907029/461199124205797439/676861111441686530    #
  #######################################################################################################
  RateLimit:
    # How many times bot should request in given time constraint before it waits to restoring 'quota'.
    RequestsCount: 1
    # Determines period of time bot can have RequestsCount's amount of requests to MyAnimeList before it waits to restoring 'quota'.
    # Value must be in milliseconds.
    TimeConstraint: 2000
  # Period of time between checks for updates for all added users.
  # Notice that it time between the end of one check for update ant the start of another
  #                instead of time between start of one check for updates and start for another.
  # Also notice if you are using public instance of jikan that is available via default Uri in Jikan section, 
  # you should make delay between updates more than 5 minutes because Jikan caches 'user related stuff' for 5 minutes
  # Link to info about caching on Jikan 
  # https://jikan.docs.apiary.io/#introduction/information/caching
  # Value must be in milliseconds.
  DelayBetweenUpdateChecks: 600000
Jikan:
  # Config for how fast bot should request to Jikan server.
  # NOTICE
  # Jikan public instance have docs for rate-limiting 
  # https://jikan.docs.apiary.io/#introduction/information/rate-limiting
  # At the time i write this it is:
  # - 30 requests / minute;
  # - 2 requests / second;
  # But i'm too lazy to implement ratelimiter with 2 constraints so there is one only.
  # Default for bot 1 request for 2 seconds is very safe.
  # So even if you have many users with updates (30 updates that will consequently request to Jikan) you won't be ratelimited by Jikan.
  # So this is pretty unlikely unless something in bot is broken.
  # So you can probably lower time constraint a bit but remember to follow Jikan docs.
  RateLimit:
    # How many times bot should request in given time constraint before it waits to restoring 'quota'.
    RequestsCount: 1
    # Determines period of time bot can have RequestsCount's amount of requests to MyAnimeList before it waits to restoring 'quota'.
    # Value must be in milliseconds.
    TimeConstraint: 2000
  # The default value is uri for public instance of Jikan.
  # You can specify uri for your instance BUT NOTICE bot itself make request to MyAnimeList directly.
  # So if requests from Jikan server and bot are coming to MyAnimeList from the same public IP you can easily get ratelimited and/or banned.
  # I have three solutions to this, since i don't know hot to easily synchronize amount requests between your private server and bot:
  # - first solution is just to use public instance of Jikan;
  # - host your Jikan server and bot in the way requests won't go from the same public IP;
  # - proxy your requests from bot or your Jikan server so they would go from different public IPs;
  Uri: "https://api.jikan.moe/v3/"
# Config for database.
Database:
  # Connection string to your SQLite database.
  ConnectionString: "Data Source=path-to-your-database.db"